{% extends 'base.html.twig' %}

{% block body %}
    <h1>Placez vos navires !</h1>

    <div class="container">
        <div class="playerpanel">
            <div class="paragraph">
                <p>Vous pouvez selectionner un navire et cliquer sur la carte pour le placer. Petit rappel des tailles des navires:</p>
                <ul>
                    <li>Porte-avion: 5 cases</li>
                    <li>Cuirassé: 4 cases</li>
                    <li>Croiseur: 3 cases</li>
                    <li>Sous-marin: 3 cases</li>
                    <li>Destroyer: 2 cases</li>
                </ul>
                <a href="{{ path('save_ships' )}}" id="validate-btn" type="submit" class="btn btn-lg btn-primary">Valider vos choix</a>
            </div>
            <div class="ship-table">
                <div class="ship-container">
                    <h6>Porte-avion</h6>
                    <img id="carrier" src="{{ asset('uploads/images/posters/carrierSide.svg') }}" alt="Carrier" class="ship" data-type="carrier">
                </div>
                <div class="ship-container">
                    <h6>Cuirassé</h6>
                    <img id="battleship" src="{{ asset('uploads/images/posters/battleshipSide.svg') }}" alt="Battleship" class="ship" data-type="battleship">
                </div>
                <div class="ship-container">
                    <h6>Croiseur</h6>
                    <img id="cruiser" src="{{ asset('uploads/images/posters/cruiserSide.svg') }}" alt="Cruiser" class="ship" data-type="cruiser">
                </div>
                <div class="ship-container">
                    <h6>Sous-marin</h6>
                    <img id="submarine" src="{{ asset('uploads/images/posters/submarineSide.svg') }}" alt="Submarine" class="ship" data-type="submarine">
                </div>
                <div class="ship-container">
                    <h6>Destroyer</h6>
                    <img id="destroyer" src="{{ asset('uploads/images/posters/destroyerSide.svg') }}" alt="Destroyer" class="ship" data-type="destroyer">
                </div>
                <button class="orientation-toggle btn btn-lg btn-primary">Changer l'orientation</button>
            </div>

            <div>
                <h2>Votre flotte</h2>
                <div class="board" style="background-image: url('{{ asset('uploads/images/posters/BoardBackground.png') }}')">
                    {% for tile in playerBoard.tiles %}
                        <div class="tile tile{{ tile.status }}" data-x="{{ tile.x }}" data-y="{{ tile.y }}">
                        </div>
                    {% endfor %}
                </div>
            </div>
        </div>
    </div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        let selectedShip = null;

        document.querySelector('#validate-btn').addEventListener('click', function(event) {
            event.preventDefault(); // Empêche le comportement par défaut du lien

            const placedShips = [];
            document.querySelectorAll('.tile.full img').forEach(ship => {
                const shipType = ship.getAttribute('data-type');
                const x = parseInt(ship.getAttribute('data-x'));
                const y = parseInt(ship.getAttribute('data-y'));
                const orientation = ship.getAttribute('data-orientation');
                placedShips.push({ type: shipType, x, y, orientation });
            });

            const attack = placedShips.reduce((acc, curr) => {
                    acc[curr.type] = curr;
                        return acc;
                    }, {});


            fetch('/game/save-ships', {
            method: 'POST',
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(placedShips), // Envoyer le tableau directement
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                alert(data.message);
                window.location.href = data.redirect; // Redirection basée sur la réponse du serveur
            } else {
                alert(data.message);
                window.location.href = data.redirect; // Redirection en cas d'erreur
            }
        })
        .catch(error => {
            console.error('Erreur:', error);
            alert('Erreur lors de l\'enregistrement des navires.');
        });
    });

        function toggleOrientation() {
            if (selectedShip) {
                const x = parseInt(selectedShip.getAttribute('data-x'));
                const y = parseInt(selectedShip.getAttribute('data-y'));
                const size = getSizeByShipType(selectedShip.getAttribute('data-type'));
                const isVertical = selectedShip.getAttribute('data-orientation') === 'V';
                const newOrientation = isVertical ? 'H' : 'V';

                // Vérifier la disponibilité des cases pour la nouvelle orientation
                let validPlacement = true;
                if (newOrientation === 'H') {
                    if (y + size > 11) validPlacement = false;
                    else {
                        for (let i = y; i < y + size; i++) {
                            const tile = document.querySelector(`.tile[data-x="${x}"][data-y="${i}"]`);
                            if (tile && tile.classList.contains('full') && tile !== selectedShip.parentElement) {
                                validPlacement = false;
                                break;
                            }
                        }
                    }
                } else {
                    if (x + size > 11) validPlacement = false;
                    else {
                        for (let i = x; i < x + size; i++) {
                            const tile = document.querySelector(`.tile[data-x="${i}"][data-y="${y}"]`);
                            if (tile && tile.classList.contains('full') && tile !== selectedShip.parentElement) {
                                validPlacement = false;
                                break;
                            }
                        }
                    }
                }

                if (!validPlacement) {
                    alert('Invalid placement!');
                    return;
                }

                // Marquer les cases comme vides pour l'ancienne orientation
                markTilesEmpty(x, y, size, isVertical);

                // Appliquer la nouvelle orientation
                selectedShip.setAttribute('data-orientation', newOrientation);

                // Marquer les cases selon la nouvelle orientation
                markTiles(x, y, size, newOrientation === 'V');

                // Ajouter ou supprimer la classe 'vertical' à la tuile originale
                const originalTile = document.querySelector(`.tile[data-x="${x}"][data-y="${y}"]`);
                if (newOrientation === 'V') {
                    originalTile.classList.add('vertical');
                } else {
                    originalTile.classList.remove('vertical');
                }
            }
        }

        function getSizeByShipType(shipType) {
            switch (shipType) {
                case 'carrier': return 5;
                case 'battleship': return 4;
                case 'cruiser': return 3;
                case 'submarine': return 3;
                case 'destroyer': return 2;
                default: return 0;
            }
        }

        document.querySelectorAll('.ship').forEach(ship => {
            ship.addEventListener('click', function() {
                if (selectedShip) {
                    selectedShip.classList.remove('selected');
                    clearTileHighlights();
                }
                selectedShip = ship;
                ship.classList.add('selected');
                highlightTiles(ship);
            });
        });

        document.querySelectorAll('.tile').forEach(tile => {
            tile.addEventListener('click', function() {
                if (selectedShip && !tile.classList.contains('full')) {
                    const shipType = selectedShip.getAttribute('data-type');
                    const x = parseInt(tile.getAttribute('data-x'));
                    const y = parseInt(tile.getAttribute('data-y'));
                    const size = getSizeByShipType(shipType);
                    let orientation = selectedShip.getAttribute('data-orientation') || 'H';

                    let validPlacement = true;
                    if (orientation === 'H') {
                        if (y + size > 11) validPlacement = false;
                        else {
                            for (let i = y; i < y + size; i++) {
                                const tile = document.querySelector(`.tile[data-x="${x}"][data-y="${i}"]`);
                                if (tile.classList.contains('full')) {
                                    validPlacement = false;
                                    break;
                                }
                            }
                        }
                    } else {
                        if (x + size > 11) validPlacement = false;
                        else {
                            for (let i = x; i < x + size; i++) {
                                const tile = document.querySelector(`.tile[data-x="${i}"][data-y="${y}"]`);
                                if (tile.classList.contains('full')) {
                                    validPlacement = false;
                                    break;
                                }
                            }
                        }
                    }

                    if (!validPlacement) {
                        alert('Invalid placement!');
                        return;
                    }

                    // Supprimer l'image précédente du navire s'il en existe une
                    const previousImg = document.querySelector(`.tile img[data-type="${shipType}"]`);
                    if (previousImg) {
                        const prevX = parseInt(previousImg.getAttribute('data-x'));
                        const prevY = parseInt(previousImg.getAttribute('data-y'));
                        const prevOrientation = previousImg.getAttribute('data-orientation') || 'H';
                        const prevSize = getSizeByShipType(shipType);
                        markTilesEmpty(prevX, prevY, prevSize, prevOrientation === 'V');
                        previousImg.parentElement.innerHTML = ''; // Supprimer l'image du navire
                    }

                    markTiles(x, y, size, orientation === 'V');

                    const shipImg = document.createElement('img');
                    shipImg.src = `/uploads/images/posters/${shipType}Up.svg`;
                    shipImg.alt = shipType;
                    shipImg.classList.add(shipType.toLowerCase());
                    shipImg.setAttribute('data-type', shipType);
                    shipImg.setAttribute('data-x', x);
                    shipImg.setAttribute('data-y', y);
                    shipImg.setAttribute('data-orientation', orientation);

                    tile.innerHTML = '';
                    tile.appendChild(shipImg);
                    tile.classList.add('full');

                    // Supprimer l'image du navire du panneau
                    const shipPanelImg = document.querySelector(`#${shipType}`);
                    if (shipPanelImg) {
                        shipPanelImg.remove();
                    }

                    selectedShip.classList.remove('selected');
                    selectedShip = null;
                    clearTileHighlights();
                }
            });
        });

        document.querySelectorAll('.tile').forEach(tile => {
            tile.addEventListener('click', function() {
                if (tile.classList.contains('full')) {
                    const placedShip = tile.querySelector('img');
                    if (selectedShip) {
                        selectedShip.classList.remove('selected');
                        clearTileHighlights();
                    }
                    selectedShip = placedShip;
                    placedShip.classList.add('selected');
                    highlightTiles(selectedShip);
                }
            });
        });

        function markTiles(startX, startY, size, isVertical) {
            if (isVertical) {
                for (let i = startX; i < startX + size; i++) {
                    const tile = document.querySelector(`.tile[data-x="${i}"][data-y="${startY}"]`);
                    tile.classList.add('full');
                }
            } else {
                for (let i = startY; i < startY + size; i++) {
                    const tile = document.querySelector(`.tile[data-x="${startX}"][data-y="${i}"]`);
                    tile.classList.add('full');
                }
            }
        }

        function markTilesEmpty(startX, startY, size, isVertical) {
            if (isVertical) {
                for (let i = startX; i < startX + size; i++) {
                    const tile = document.querySelector(`.tile[data-x="${i}"][data-y="${startY}"]`);
                    tile.classList.remove('full');
                }
            } else {
                for (let i = startY; i < startY + size; i++) {
                    const tile = document.querySelector(`.tile[data-x="${startX}"][data-y="${i}"]`);
                    tile.classList.remove('full');
                }
            }
        }

        function highlightTiles(ship) {
            const shipType = ship.getAttribute('data-type');
            const x = parseInt(ship.getAttribute('data-x'));
            const y = parseInt(ship.getAttribute('data-y'));
            const size = getSizeByShipType(shipType);
            const orientation = ship.getAttribute('data-orientation');

            clearTileHighlights();

            if (orientation === 'H') {
                for (let i = y; i < y + size; i++) {
                    const tile = document.querySelector(`.tile[data-x="${x}"][data-y="${i}"]`);
                    tile.classList.add('selected');
                }
            } else {
                for (let i = x; i < x + size; i++) {
                    const tile = document.querySelector(`.tile[data-x="${i}"][data-y="${y}"]`);
                    tile.classList.add('selected');
                }
            }
        }

        function clearTileHighlights() {
            document.querySelectorAll('.tile.selected').forEach(tile => {
                tile.classList.remove('selected');
            });
        }

        document.querySelector('.orientation-toggle').addEventListener('click', function() {
            toggleOrientation();
        });
    });
</script>

{% endblock %}